# Docker Compose file for mwdb-core development environment

services:
  minio:
    image: minio/minio
    command: server /data
    volumes:
      - /tmp/minio:/data
    ports:
      - "127.0.0.1:9000:9000"
    environment:
      - MINIO_ROOT_USER=mwdb-test-access
      - MINIO_ROOT_PASSWORD=mwdb-test-key

  mwdb:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile
    depends_on:
      - postgres
      - redis
      - minio
    restart: on-failure
    env_file:
      - mwdb-vars.env
    ports:
      - "127.0.0.1:5000:5000"  # ðŸ‘ˆ Expose backend API for browser access
    environment:
      HOT_RELOAD: 1
      MWDB_MAIL_SMTP: "mailhog:1025"
      MWDB_MAIL_FROM: "noreply@mwdb.dev"
      MWDB_RECAPTCHA_SITE_KEY: "6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI"
      MWDB_RECAPTCHA_SECRET: "6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe"
      MWDB_ENABLE_REGISTRATION: 1
      MWDB_ENABLE_PROMETHEUS_METRICS: 1
    volumes:
      - "./docker/mail_templates:/app/mail_templates"
      - "./mwdb:/app/mwdb"
      - mwdb-uploads:/app/uploads

  mwdb-web:
    depends_on:
      - mwdb
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile-web-dev
    ports:
      - "8080:3000"
    environment:
      HOST: 0.0.0.0
      REACT_APP_API_URL: "http://localhost:5000/api/"  # ðŸ‘ˆ CorrigÃ© pour cibler backend exposÃ©
      NODE_ENV: development
    volumes:
      - "./mwdb/web/public:/app/public"
      - "./mwdb/web/src:/app/src"
      - "./docker/plugins:/app/plugins"
    restart: on-failure

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: mwdb
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mwdb_db
    ports:
      - "127.0.0.1:54322:5432"
    volumes:
      - mwdb-postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "127.0.0.1:8025:8025"

volumes:
  mwdb-postgres:
  mwdb-uploads:
